
package com.myehr.controller.webservice.cxf.erp;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.security.auth.callback.CallbackHandler;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBElement;

import org.apache.cxf.endpoint.Client;
import org.apache.cxf.frontend.ClientProxy;
import org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor;
import org.apache.ws.security.WSConstants;
import org.apache.ws.security.WSPasswordCallback;
import org.apache.ws.security.handler.WSHandlerConstants;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class was generated by Apache CXF 2.6.2
 * 2018-04-18T17:00:27.113+08:00
 * Generated source version: 2.6.2
 * 
 */
public final class CUXOKCBPMSERAPKGPortType_CUXOKCBPMSERAPKGPort_Client {
	private static Logger logger = LoggerFactory.getLogger(CUXOKCBPMSERAPKGPortType_CUXOKCBPMSERAPKGPort_Client.class);
    private static final QName SERVICE_NAME = new QName("http://xmlns.oracle.com/apps/fnd/soaprovider/plsql/cux_okc_bpmsera_pkg/", "CUX_OKC_BPMSERA_PKG_Service");

    private CUXOKCBPMSERAPKGPortType_CUXOKCBPMSERAPKGPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = CUXOKCBPMSERAPKGService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();logger.error(e.getMessage(),e);
            }
        }
        
        
      
        CUXOKCBPMSERAPKGService ss = new CUXOKCBPMSERAPKGService(wsdlURL, SERVICE_NAME);
        CUXOKCBPMSERAPKGPortType port = ss.getCUXOKCBPMSERAPKGPort();  
        
        Map<String, Object> props = new HashMap<String, Object>();  
        props.put(WSHandlerConstants.ACTION, WSHandlerConstants.USERNAME_TOKEN);        
        props.put(WSHandlerConstants.PASSWORD_TYPE,WSConstants.PW_TEXT);  
        props.put(WSHandlerConstants.USER, "MDM_TRANS");  
        props.put(WSHandlerConstants.PW_CALLBACK_CLASS, PasswordHandler.class.getName());  
        WSS4JOutInterceptor wssOut = new WSS4JOutInterceptor(props);  
        Client client = ClientProxy.getClient(port);  
        client.getOutInterceptors().add(wssOut);  
        
        {
        logger.info("Invoking bpmseraMAIN...");
        com.myehr.controller.webservice.cxf.erp.SOAHeader _bpmseraMAIN_header = new SOAHeader();
        _bpmseraMAIN_header.setOrgId("");
        _bpmseraMAIN_header.setNLSLanguage("");
        _bpmseraMAIN_header.setRespApplication("");
        _bpmseraMAIN_header.setResponsibility("");
        _bpmseraMAIN_header.setSecurityGroup("");
        com.myehr.controller.webservice.cxf.erp.InputParameters _bpmseraMAIN_body = new InputParameters();
        ObjectFactory objFac=new ObjectFactory();  
		JAXBElement<String> arg0 = objFac.createInputParametersARG0("1");  
		JAXBElement<String> arg1 = objFac.createInputParametersARG1("CONTRACT"); 
		String arg22 = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"+
					  "<datainfos syscodesyncode=\"CONTRACT\" uniqueid=\"1\" syscode=\"okccontapp\" companycode=\"520001\" sendtime=\"2015-07-23 16:23:45\">\n"+
					  " <contract>\n"+
					  "    <contractid>7141</contractid>\n"+
					  "    <approvelevel>3</approvelevel>\n"+
					  "    <approvedid>6</approvedid>\n"+
					  "    <approvalstatus>APPROVED</approvalstatus>\n"+
					  "    <approvalcomments>测试审批意见接口插入</approvalcomments>\n"+
					  "    <approvedate>2018-04-17 12:00:00</approvedate>\n"+
					  "    <wfstatus>P</wfstatus>\n"+
					  " </contract>\n"+
					  "</datainfos>\n";
		JAXBElement<String> arg2 = objFac.createInputParametersARG2(arg22);  
		_bpmseraMAIN_body.setARG0(arg0);
		_bpmseraMAIN_body.setARG1(arg1);
		_bpmseraMAIN_body.setARG2(arg2);
        
        com.myehr.controller.webservice.cxf.erp.OutputParameters _bpmseraMAIN__return = port.bpmseraMAIN(_bpmseraMAIN_header, _bpmseraMAIN_body);
        logger.info("bpmseraMAIN.result=" +  _bpmseraMAIN__return.getXRETURNMSG().getValue());


        }

        System.exit(0);
    }
    
    public static String Test(Map<String,String> obj) {
    	String reCode = "";
    	
    	URL wsdlURL = CUXOKCBPMSERAPKGService.WSDL_LOCATION;
        
      
        CUXOKCBPMSERAPKGService ss = new CUXOKCBPMSERAPKGService(wsdlURL, SERVICE_NAME);
        CUXOKCBPMSERAPKGPortType port = ss.getCUXOKCBPMSERAPKGPort();  
        
        Map<String, Object> props = new HashMap<String, Object>();  
        props.put(WSHandlerConstants.ACTION, WSHandlerConstants.USERNAME_TOKEN);        
        props.put(WSHandlerConstants.PASSWORD_TYPE,WSConstants.PW_TEXT);  
        props.put(WSHandlerConstants.USER, "MDM_TRANS");  
        props.put(WSHandlerConstants.PW_CALLBACK_CLASS, PasswordHandler.class.getName());  
        WSS4JOutInterceptor wssOut = new WSS4JOutInterceptor(props);  
        Client client = ClientProxy.getClient(port);  
        client.getOutInterceptors().add(wssOut);  
        
        {
	        logger.info("Invoking bpmseraMAIN...");
	        com.myehr.controller.webservice.cxf.erp.SOAHeader _bpmseraMAIN_header = new SOAHeader();
	        _bpmseraMAIN_header.setOrgId("");
	        _bpmseraMAIN_header.setNLSLanguage("");
	        _bpmseraMAIN_header.setRespApplication("");
	        _bpmseraMAIN_header.setResponsibility("");
	        _bpmseraMAIN_header.setSecurityGroup("");
	        com.myehr.controller.webservice.cxf.erp.InputParameters _bpmseraMAIN_body = new InputParameters();
	        ObjectFactory objFac=new ObjectFactory();  
			JAXBElement<String> arg0 = objFac.createInputParametersARG0("1");  
			JAXBElement<String> arg1 = objFac.createInputParametersARG1("CONTRACT");
			String str="";
			for(Map.Entry<String,String > entry:obj.entrySet()){ 
				str+="<" +entry.getKey()+">"+entry.getValue()+"</"+entry.getKey()+">";  
		    }   
			
			String arg22 = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"+
						  "<datainfos syscodesyncode=\"CONTRACT\" uniqueid=\"1\" syscode=\"okccontapp\" companycode=\"520001\" sendtime=\"2015-07-23 16:23:45\">\n"+
						  " <contract>\n"+
						  str+
						  " </contract>\n"+
						  "</datainfos>\n";
			JAXBElement<String> arg2 = objFac.createInputParametersARG2(arg22);  
			_bpmseraMAIN_body.setARG0(arg0);
			_bpmseraMAIN_body.setARG1(arg1);
			_bpmseraMAIN_body.setARG2(arg2);
	        
	        com.myehr.controller.webservice.cxf.erp.OutputParameters _bpmseraMAIN__return = port.bpmseraMAIN(_bpmseraMAIN_header, _bpmseraMAIN_body);
	        reCode = "result=" + _bpmseraMAIN__return.getXRETURNMSG().getValue();
        }
    	return reCode;
	}
    
    public static class PasswordHandler implements CallbackHandler  
    {  
        public void handle(javax.security.auth.callback.Callback[] callbacks) {  
            for (int i = 0; i < callbacks.length; i++) {  
                WSPasswordCallback pc = (WSPasswordCallback)callbacks[i];  
                pc.setPassword("123456");  
            }  
        }  
      
    }  

}
